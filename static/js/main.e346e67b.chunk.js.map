{"version":3,"sources":["actions/constants.js","components/Header/index.js","actions/auth.js","components/Layout/index.js","containers/HomePage/index.js","actions/user.actions.js","components/Layout/UI/Card/index.js","containers/LoginPage/index.js","containers/RegisterPage/index.js","components/PrivateRoute.js","App.js","serviceWorker.js","reducers/auth.reducer.js","reducers/user.reducer.js","reducers/index.js","store/index.js","index.js"],"names":["authConstant","userConstants","Header","props","auth","useSelector","state","dispatch","useDispatch","className","style","display","authenticated","to","margin","color","fontWeight","firstName","lastName","onClick","uid","a","type","firestore","collection","doc","update","isOnline","then","signOut","localStorage","clear","catch","error","console","log","payload","Layout","children","User","user","src","alt","flex","justifyContent","HomePage","unsubscribe","useState","chatStarted","setChatStarted","chatUser","setChatUser","message","setMessage","userUid","setUserUid","useEffect","db","onSnapshot","querySnapshot","users","forEach","data","push","f","initChat","where","uid_1","uid_2","orderBy","conversations","user_uid_1","user_uid_2","getRealtimeConversations","length","map","key","id","con","textAlign","value","onChange","e","target","placeholder","msgObj","add","isView","createdAt","Date","updateMessage","Card","LoginPage","email","setEmail","password","setPassword","onSubmit","preventDefault","signInWithEmailAndPassword","name","displayName","split","loggedInUser","setItem","JSON","stringify","alert","RegisterPage","setFirstName","setLastName","createUserWithEmailAndPassword","currentuser","currentUser","updateProfile","set","signup","PrivateRoute","Component","component","rest","getItem","parse","App","path","exact","Boolean","window","location","hostname","match","initState","authenticating","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunk","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"saACeA,EACK,aADLA,EAGM,cAIRC,EACU,qBADVA,EAEa,wB,OC+BXC,EA/BA,SAACC,GACd,IAAMC,EAAOC,aAAY,SAAAC,GAAK,OAAEA,EAAMF,QAChCG,EAAWC,cAIjB,OACE,4BAAQC,UAAU,UACd,yBAAKC,MAAO,CAACC,QAAS,SACpB,yBAAKF,UAAU,QAAf,iBACEL,EAAKQ,cAKC,KAJR,wBAAIH,UAAU,YAEV,4BAAI,kBAAC,IAAD,CAASI,GAAI,UAAb,UACJ,4BAAI,kBAAC,IAAD,CAASA,GAAI,WAAb,cAIR,yBAAKH,MAAO,CAACI,OAAQ,SAAUC,MAAO,OAAQC,WAAY,SAAUZ,EAAKQ,cAAL,aAA0BR,EAAKa,UAA/B,YAA4Cb,EAAKc,UAAW,IAClI,wBAAIT,UAAU,QACTL,EAAKQ,cAAc,4BAChB,kBAAC,IAAD,CAAMC,GAAI,IAAKM,QAAS,WCgFlB,IAACC,ED/ELb,GC+EKa,ED/EWhB,EAAKgB,ICgFnC,uCAAO,WAAMb,GAAN,SAAAc,EAAA,sDACHd,EAAS,CAACe,KAAK,GAAD,OAAItB,EAAJ,cAEHuB,sBACRC,WAAW,SACbC,IAAIL,GACJM,OAAO,CACJC,UAAS,IAEZC,MAAK,WACFxB,iBACHyB,UACAD,MAAK,WAEFE,aAAaC,QACbxB,EAAS,CAACe,KAAK,GAAD,OAAItB,EAAJ,iBAEjBgC,OAAM,SAAAC,GACHC,QAAQC,IAAIF,GACZ1B,EAAS,CAACe,KAAK,GAAD,OAAItB,EAAJ,YAAuCoC,QAAQ,CAACH,iBAIjED,OAAM,SAAAC,GACHC,QAAQC,IAAIF,MAxBb,2CAAP,0DDjFY,WAGG,QEhBJI,EAVA,SAAClC,GACd,OACE,6BACA,kBAAC,EAAD,MACCA,EAAMmC,WCLLC,EAAO,SAACpC,GAAU,IACbqC,EAAgBrC,EAAhBqC,KAAKrB,EAAWhB,EAAXgB,QACZ,OACI,yBAAKA,QAAS,kBAAIA,EAAQqB,IAAQ/B,UAAU,eACxC,yBAAMA,UAAU,cACZ,yBAAKgC,IAAI,+EAA+EC,IAAI,MAEhG,yBAAKhC,MAAO,CAACC,QAAQ,OAAOgC,KAAK,EAAEC,eAAe,gBAAiB9B,OAAQ,WACvE,0BAAMJ,MAAO,CAACM,WAAY,MAAOwB,EAAKvB,UAAtC,IAAkDuB,EAAKtB,UACvD,0BAAMT,UAAW+B,EAAKb,SAAL,mCAAjB,QA4GDkB,EAvGE,SAAC1C,GACd,IAOI2C,EAPEvC,EAAYC,cACZJ,EAAOC,aAAY,SAAAC,GAAK,OAAEA,EAAMF,QAChCoC,EAAOnC,aAAY,SAAAC,GAAK,OAAEA,EAAMkC,QAHd,EAIaO,oBAAS,GAJtB,mBAIjBC,EAJiB,KAILC,EAJK,OAKOF,mBAAS,IALhB,mBAKjBG,EALiB,KAKRC,EALQ,OAMKJ,mBAAS,IANd,mBAMjBK,EANiB,KAMTC,EANS,OAOKN,mBAAS,MAPd,mBAOjBO,EAPiB,KAOTC,EAPS,KASxBC,qBAAU,WC5BkB,IAACpC,ED8B5B0B,EAAcvC,GC9Bca,ED8BYhB,EAAKgB,IC7B9C,uCAAO,WAAOb,GAAP,iBAAAc,EAAA,6DACHd,EAAS,CAACe,KAAK,GAAD,OAAIrB,EAAJ,cACRwD,EAAKlC,sBACNuB,EAAeW,EAAGjC,WAAW,SAErCkC,YAAW,SAACC,GACT,IAAMC,EAAQ,GACdD,EAAcE,SAAQ,SAASpC,GACxBA,EAAIqC,OAAO1C,MAAQA,GACtBwC,EAAMG,KAAKtC,EAAIqC,WAKpBvD,EAAS,CACLe,KAAK,GAAD,OAAIrB,EAAJ,YACJmC,QAAQ,CAACwB,cAhBT,kBAmBAd,GAnBA,2CAAP,wDD8BClB,MAAK,SAAAkB,GACJ,OAAOA,KAERd,OAAM,SAAAC,GACLC,QAAQC,IAAIF,QAMb,IAKHuB,qBAAU,WACR,OAAO,WAELV,EAAYlB,MAAK,SAAAoC,GAAC,OAAIA,OAAKhC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,SAGvD,IAEH,IAAMgC,EAAW,SAACzB,GACdS,GAAe,GACfE,EAAY,GAAD,OAAIX,EAAKvB,WAAT,OAAqBuB,EAAKtB,WACrCqC,EAAWf,EAAKpB,KAChBb,ECXkC,SAACiC,GACrC,8CAAO,WAAMjC,GAAN,SAAAc,EAAA,sDACQE,sBACRC,WAAW,iBACb0C,MAAM,aAAa,KAAK,CAAC1B,EAAK2B,MAAM3B,EAAK4B,QACzCC,QAAQ,YAAY,OACpBX,YAAW,SAACC,GACT,IAAMW,EAAgB,GACtBX,EAAcE,SAAQ,SAAApC,IAEbA,EAAIqC,OAAOS,aAAe/B,EAAK2B,OAAS1C,EAAIqC,OAAOU,aAAehC,EAAK4B,OACrE3C,EAAIqC,OAAOS,aAAe/B,EAAK4B,OAAS3C,EAAIqC,OAAOU,aAAchC,EAAK2B,QAErEG,EAAcP,KAAKtC,EAAIqC,WAanCvD,EAAS,CACGe,KAAKrB,EACLmC,QAAQ,CAACkC,mBAErBpC,QAAQC,IAAImC,MA7Bb,2CAAP,sDDUWG,CAAyB,CAACN,MAAM/D,EAAKgB,IAAIgD,MAAM5B,EAAKpB,OAC7Dc,QAAQC,IAAIK,IAkBhB,OACE,kBAAC,EAAD,KACA,6BAAS/B,UAAU,aACnB,yBAAKA,UAAU,eAEX+B,EAAKoB,MAAMc,OAAO,EAClBlC,EAAKoB,MAAMe,KAAI,SAAAnC,GACX,OACA,kBAAC,EAAD,CAAMrB,QAAS8C,EAAUW,IAAKpC,EAAKqC,GAAIrC,KAAMA,OAE9C,MAKP,yBAAK/B,UAAU,YAEX,yBAAKA,UAAU,cAAcuC,EAAYE,EAAS,GAAlD,KACA,yBAAKzC,UAAU,mBAEXuC,EACAR,EAAK8B,cAAcK,KAAI,SAAAG,GAAG,OACzB,yBAAKpE,MAAO,CAAEqE,UAAUD,EAAIP,aAAanE,EAAKgB,IAAI,QAAQ,SACvD,uBAAGX,UAAU,gBAAiBqE,EAAI1B,aAErC,MAODJ,EACA,yBAAKvC,UAAU,gBACf,8BAAUuE,MAAO5B,EAAS6B,SAAU,SAACC,GAAD,OAAK7B,EAAW6B,EAAEC,OAAOH,QAAQI,YAAY,kBACjF,4BAAQjE,QAlDI,SAAC+D,GACnB,IAAMG,EAAS,CACfd,WAAYnE,EAAKgB,IACjBoD,WAAYlB,EACZF,WAEc,KAAXA,GACC7C,EC7CoB,SAAC8E,GAC3B,8CAAO,WAAM9E,GAAN,SAAAc,EAAA,sDACQE,sBACRC,WAAW,iBACb8D,IADD,2BAEOD,GAFP,IAGIE,QAAO,EACPC,UAAW,IAAIC,QAGlB7D,MAAK,SAACkC,GACH5B,QAAQC,IAAI2B,MAMf9B,OAAM,SAAAC,GACHC,QAAQC,IAAIF,MAjBb,2CAAP,sDD4CeyD,CAAcL,IACtBzD,MAAK,WACFyB,EAAW,OAGnBnB,QAAQC,IAAIkD,KAsCN,SACG,SEnGAM,G,MATF,SAACxF,GACZ,OACE,yBAAKM,UAAU,QACdN,EAAMmC,YC8CIsD,G,MA5CG,SAACzF,GAAW,IAAD,EACD4C,mBAAS,IADR,mBACpB8C,EADoB,KACbC,EADa,OAEK/C,mBAAS,IAFd,mBAEpBgD,EAFoB,KAEVC,EAFU,KAGrBzF,EAAWC,cAqBjB,OApBaH,aAAY,SAAAC,GAAK,OAAGA,EAAMF,QAoB/BQ,cACC,kBAAC,IAAD,CAAUC,GAAM,MAGvB,kBAAC,EAAD,KACE,yBAAKJ,UAAU,kBACd,kBAAC,EAAD,KACG,0BAAMwF,SApBI,SAACf,GLkCC,IAAC1C,GKjCnB0C,EAAEgB,iBACW,KAAVL,GAIa,KAAbE,EAIHxF,GLwBmBiC,EKxBH,CAACqD,QAAME,YLyBf,uCAAO,WAAMxF,GAAN,SAAAc,EAAA,sDACHd,EAAS,CAACe,KAAK,GAAD,OAAItB,EAAJ,cACdI,iBACC+F,2BAA2B3D,EAAKqD,MAAMrD,EAAKuD,UAC3CnE,MAAK,SAACkC,GACH5B,QAAQC,IAAI2B,GAEZ,IAAMsC,EAAOtC,EAAKtB,KAAK6D,YAAYC,MAAM,KAIlCC,EAAe,CACbtF,UAJSmF,EAAK,GAKdlF,SAJQkF,EAAK,GAKbhF,IAAI0C,EAAKtB,KAAKpB,IACdyE,MAAM/B,EAAKtB,KAAKqD,OAGzB/D,aAAa0E,QAAQ,OAAQC,KAAKC,UAAUH,IAE5ChG,EAAS,CACLe,KAAK,GAAD,OAAItB,EAAJ,YACJoC,QAAQ,CAACI,KAAK+D,QAGrBvE,OAAM,SAAAC,GACHC,QAAQC,IAAIF,GACZ1B,EAAS,CACLe,KAAK,GAAD,OAAItB,EAAJ,YACJoC,QAAQ,CAACH,cA7Bd,2CAAP,wDK5BN0E,MAAM,wBAJNA,MAAM,uBAkBF,2BAAOP,KAAK,QAAQ9E,KAAK,OAAO0D,MAAOa,EAAOZ,SAAU,SAACC,GAAD,OAAKY,EAASZ,EAAEC,OAAOH,QAAQI,YAAY,UACnG,2BAAOgB,KAAK,WAAW9E,KAAK,WAAW0D,MAAOe,EAAUd,SAAU,SAACC,GAAD,OAAKc,EAAYd,EAAEC,OAAOH,QAAQI,YAAY,aAChH,6BAAK,gDCMAwB,EAxCM,SAACzG,GAAW,IAAD,EACI4C,mBAAS,IADb,mBACvB9B,EADuB,KACZ4F,EADY,OAEE9D,mBAAS,IAFX,mBAEvB7B,EAFuB,KAEb4F,EAFa,OAGJ/D,mBAAS,IAHL,mBAGvB8C,EAHuB,KAGhBC,EAHgB,OAIE/C,mBAAS,IAJX,mBAIvBgD,EAJuB,KAIbC,EAJa,KAKxBzF,EAAWC,cAUjB,OATaH,aAAY,SAAAC,GAAK,OAAGA,EAAMF,QAS/BQ,cACC,kBAAC,IAAD,CAAUC,GAAM,MAGvB,kBAAC,EAAD,KACG,yBAAKJ,UAAU,kBACb,kBAAC,EAAD,KACG,0BAAMwF,SAfK,SAACf,GACpBA,EAAEgB,iBAIF3F,ENtBkB,SAACiC,GACnB,8CAAO,WAAMjC,GAAN,eAAAc,EAAA,sDACGoC,EAAKlC,sBACXhB,EAAS,CAACe,KAAK,GAAD,OAAItB,EAAJ,cACdI,iBACC2G,+BAA+BvE,EAAKqD,MAAMrD,EAAKuD,UAC/CnE,MAAM,SAAAkC,GACH5B,QAAQC,IAAI2B,GACZ,IAAMkD,EAAc5G,iBAAO6G,YACrBb,EAAI,UAAM5D,EAAKvB,UAAX,YAAwBuB,EAAKtB,UACvC8F,EAAYE,cAAc,CACtBb,YAAYD,IAKnBxE,MAAK,WAEG6B,EAAGjC,WAAW,SACdC,IAAIqC,EAAKtB,KAAKpB,KACd+F,IAAI,CACDlG,UAAWuB,EAAKvB,UAChBC,SAASsB,EAAKtB,SACdE,IAAI0C,EAAKtB,KAAKpB,IACdoE,UAAU,IAAIC,KACd9D,UAAU,IAEbC,MAAK,WACF,IAAM2E,EAAe,CACZtF,UAAWuB,EAAKvB,UAChBC,SAASsB,EAAKtB,SACdE,IAAI0C,EAAKtB,KAAKpB,IACdyE,MAAMrD,EAAKqD,OAGpB/D,aAAa0E,QAAQ,OAAOC,KAAKC,UAAUH,IAC3CrE,QAAQC,IAAI,+BACZ5B,EAAS,CACLe,KAAK,GAAD,OAAItB,EAAJ,YACJoC,QAAQ,CAACI,KAAK+D,QAIrBvE,OAAM,SAAAC,GACHC,QAAQC,IAAIF,GACZ1B,EAAS,CAACe,KAAK,GAAD,OAAItB,EAAJ,WACDoC,QAAQ,CAACH,oBA7C/B,2CAAP,sDMqBSmF,CAHI,CACXnG,YAAWC,WAAU2E,QAAOE,gBAatB,uCACA,2BAAOK,KAAK,YAAY9E,KAAK,OAAO0D,MAAO/D,EAAWgE,SAAU,SAACC,GAAD,OAAK2B,EAAa3B,EAAEC,OAAOH,QAAQI,YAAY,eAC/G,2BAAOgB,KAAK,WAAW9E,KAAK,OAAO0D,MAAO9D,EAAU+D,SAAU,SAACC,GAAD,OAAK4B,EAAY5B,EAAEC,OAAOH,QAAQI,YAAY,cAC5G,2BAAOgB,KAAK,QAAQ9E,KAAK,OAAO0D,MAAOa,EAAOZ,SAAU,SAACC,GAAD,OAAKY,EAASZ,EAAEC,OAAOH,QAAQI,YAAY,UACnG,2BAAOgB,KAAK,WAAW9E,KAAK,WAAW0D,MAAOe,EAAUd,SAAU,SAACC,GAAD,OAAKc,EAAYd,EAAEC,OAAOH,QAAQI,YAAY,aAChH,6BACA,gD,QCpBGiC,EAdM,SAAC,GAAmC,IAAxBC,EAAuB,EAAjCC,UAAuBC,EAAU,6BACtD,OACI,kBAAC,IAAD,iBAAWA,EAAX,CAAiBD,UAAW,SAACpH,GAE3B,OADa2B,aAAa2F,QAAQ,QAAUhB,KAAKiB,MAAM5F,aAAa2F,QAAQ,SAAS,MAE5E,kBAACH,EAAD,MAEA,kBAAC,IAAD,CAAUzG,GAAE,gBCoBd8G,MAtBf,WACE,IAAMpH,EAAWC,cACXJ,EAAOC,aAAY,SAAAC,GAAK,OAAEA,EAAMF,QAMtC,OALAoD,qBAAU,WACJpD,EAAKQ,eACPL,ER8EF,uCAAO,WAAMA,GAAN,eAAAc,EAAA,sDACGmB,EAAOV,aAAa2F,QAAQ,QAAShB,KAAKiB,MAAM5F,aAAa2F,QAAQ,SAAS,KAEhFlH,EADDiC,EACU,CACLlB,KAAK,GAAD,OAAItB,EAAJ,YACIoC,QAAQ,CAACI,SAGZ,CACLlB,KAAK,GAAD,OAAItB,EAAJ,YACIoC,QAAQ,CAACH,MAAM,wBAV5B,2CAAP,yDQ5EA,IAEA,yBAAKxB,UAAU,OACb,kBAAC,IAAD,KAEG,kBAAC,EAAD,CAAcmH,KAAK,IAAIC,OAAK,EAACN,UAAW1E,IAExC,kBAAC,IAAD,CAAO+E,KAAO,SAASL,UAAW3B,IAClC,kBAAC,IAAD,CAAOgC,KAAK,UAAUL,UAAWX,OCftBkB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,YCjBAC,EAAY,CACdlH,UAAU,GACVC,SAAS,GACT2E,MAAM,GACNuC,gBAAe,EACfxH,eAAc,EACdqB,MAAM,MCNJkG,EAAY,CACdvE,MAAM,GACNU,cAAc,ICSH+D,EANKC,YAAgB,CAChClI,KFIW,WAA2B,IAA1BE,EAAyB,uDAAnB6H,EAAUI,EAAS,uCAErC,OADArG,QAAQC,IAAIoG,GACLA,EAAOjH,MACV,IAAI,GAAJ,OAAQtB,EAAR,YACAM,EAAK,2BACEA,GADF,IAED8H,gBAAe,IAElB,MACD,IAAI,GAAJ,OAAQpI,EAAR,YACAM,EAAK,uCACEA,GACAiI,EAAOnG,QAAQI,MAFjB,IAGD5B,eAAc,EACdwH,gBAAe,IAEnB,MACA,IAAI,GAAJ,OAAQpI,EAAR,YACAM,EAAM,2BACCA,GADF,IAEDM,eAAc,EACdwH,gBAAe,EACfnG,MAAMsG,EAAOnG,QAAQH,QAGzB,MACA,IAAI,GAAJ,OAAQjC,EAAR,YACA,MACC,IAAI,GAAJ,OAAQA,EAAR,YACAM,EAAK,eACE6H,GAER,MACA,IAAI,GAAJ,OAAQnI,EAAR,YACAM,EAAK,2BACEA,GADF,IAED2B,MAAMsG,EAAOnG,QAAQH,QAK7B,OAAO3B,GE5CPkC,KDFW,WAA2B,IAA1BlC,EAAyB,uDAAnB6H,EAAUI,EAAS,uCACrC,OAAOA,EAAOjH,MACV,IAAI,GAAJ,OAAQrB,EAAR,YACA,MACA,IAAI,GAAJ,OAAQA,EAAR,YACAK,EAAK,2BACEA,GADF,IAEDsD,MAAM2E,EAAOnG,QAAQwB,QAEzB,MACA,KAAK3D,EACDK,EAAK,2BACEA,GADF,IAEDgE,cAAciE,EAAOnG,QAAQkC,gBAKzC,OAAOhE,K,QEjBIkI,EAHAC,YAAYJ,EAAYK,YAAgBC,MCerDC,IAASC,cAVa,CACpBC,OAAQ,0CACRC,WAAY,sCACZC,YAAa,6CACbC,UAAW,sBACXC,cAAe,kCACfC,kBAAmB,gBACnBC,MAAO,6CACPC,cAAe,iBAGjBtB,OAAOS,MAAQA,EACjBc,IAASC,OACP,kBAAC,IAAD,CAAUf,MAAOA,GACjB,kBAAC,IAAMgB,WAAP,KACE,kBAAC,EAAD,QAGFC,SAASC,eAAe,SLwGpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBjI,MAAK,SAAAkI,GACJA,EAAaC,gBAEd/H,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAMmB,c","file":"static/js/main.e346e67b.chunk.js","sourcesContent":["\nexport   const authConstant = {\n        USER_LOGIN: \"USER_LOGIN\",\n    //    USER_LOGIN_SUCCESS:\"USER_LOGIN_SUCCESS\",\n        USER_LOGOUT: \"USER_LOGOUT\"\n\n}\n\nexport const userConstants = {\n    GET_REALTIME_USERS:\"GET_REALTIME_USERS\",\n    GET_REALTIME_MESSAGES:\"GET_REALTIME_MESSAGES\"\n}\n\n ","import React from 'react'\nimport {NavLink,Link} from \"react-router-dom\";\nimport \"./style.css\"\nimport {useSelector,useDispatch} from \"react-redux\"\nimport {logout} from \"../../actions\"\n/**\n* @author\n* @function Header\n**/\n\nconst Header = (props) => {\n  const auth = useSelector(state=>state.auth)\n  const dispatch = useDispatch()\n  //const logout = () =>{\n    //dispatch(logout())\n  //}\n  return(\n    <header className=\"header\">\n        <div style={{display: 'flex'}}>\n          <div className=\"logo\">Web Messenger</div>\n          {!auth.authenticated?\n          <ul className=\"leftMenu\">\n            \n              <li><NavLink to={'/login'}>Login</NavLink></li>\n              <li><NavLink to={'/signup'}>Sign up</NavLink></li>\n            </ul>:null}\n            \n        </div>\n          <div style={{margin: '20px 0', color: '#fff', fontWeight: 'bold'}}>{auth.authenticated? `Hi ${auth.firstName} ${auth.lastName}`:\"\"}</div>\n        <ul className=\"menu\">\n            {auth.authenticated?<li>\n                <Link to={'#'} onClick={()=>{\n                  dispatch(logout(auth.uid))\n                }}>Logout</Link>\n            </li> :null}\n        </ul>\n    </header>\n   )\n\n }\n\nexport default Header","import {auth,firestore} from \"firebase\"\nimport { authConstant } from './constants';\nexport const signup = (user) =>{\n    return async(dispatch)=>{\n        const db = firestore();\n        dispatch({type:`${authConstant.USER_LOGIN}_REQUEST`})\n        auth()\n        .createUserWithEmailAndPassword(user.email,user.password)\n        .then( data=>{\n            console.log(data);\n            const currentuser = auth().currentUser;\n            const name = `${user.firstName} ${user.lastName}`\n            currentuser.updateProfile({\n                displayName:name\n                \n            })\n            \n        \n        .then(()=>{\n                //if u are here means it is updated successfully\n                 db.collection(\"users\")\n                .doc(data.user.uid)\n                .set({\n                    firstName: user.firstName,\n                    lastName:user.lastName,\n                    uid:data.user.uid,\n                    createdAt:new Date(),\n                    isOnline: true\n                })\n                .then(()=>{\n                    const loggedInUser = {\n                             firstName: user.firstName,\n                             lastName:user.lastName,\n                             uid:data.user.uid,\n                             email:user.email\n                    }\n                    \n                    localStorage.setItem(\"user\",JSON.stringify(loggedInUser))\n                    console.log(\"User logged in successfully\")\n                    dispatch({\n                        type:`${authConstant.USER_LOGIN}_SUCCESS`,\n                        payload:{user:loggedInUser}\n                    })\n\n                })\n                .catch(error=>{\n                    console.log(error);\n                    dispatch({type:`${authConstant.USER_LOGIN}_FAILED`,\n                                 payload:{error}})\n                })\n            })\n\n        })        \n      \n        \n    }  \n}\nexport const signin = (user)=>{\n            return async dispatch =>{\n                dispatch({type:`${authConstant.USER_LOGIN}_REQUEST`});\n                auth()\n                .signInWithEmailAndPassword(user.email,user.password)\n                .then((data)=>{\n                    console.log(data);\n\n                    const name = data.user.displayName.split(\" \");\n                    const firstName = name[0];\n                    const lastName = name[1];\n\n                     const loggedInUser = {\n                             firstName,\n                             lastName,\n                             uid:data.user.uid,\n                             email:data.user.email\n                    }\n\n                    localStorage.setItem(\"user\", JSON.stringify(loggedInUser));\n\n                    dispatch({\n                        type:`${authConstant.USER_LOGIN}_SUCCESS`,\n                        payload:{user:loggedInUser}\n                    })\n                })\n                .catch(error =>{\n                    console.log(error)\n                    dispatch({\n                        type:`${authConstant.USER_LOGIN}_FAILURE`,\n                        payload:{error}\n                    })\n                })\n            }\n\n        }\n\nexport const isLoggedInUser = () =>{\n    return async dispatch =>{\n        const user = localStorage.getItem(\"user\")? JSON.parse(localStorage.getItem(\"user\")):null;\n        if(user){\n            dispatch({\n                type:`${authConstant.USER_LOGIN}_SUCCESS`,\n                        payload:{user}\n            })\n        }else{\n            dispatch({\n                type:`${authConstant.USER_LOGIN}_FAILURE`,\n                        payload:{error:\"Login again please\"}\n            })\n        }\n    }\n}        \n    \nexport const logout = (uid) =>{\n    return async dispatch =>{\n        dispatch({type:`${authConstant.USER_LOGOUT}_REQUEST`})\n        //Now lets logout user\n        const db = firestore();\n        db.collection(\"users\")\n        .doc(uid)\n        .update({\n            isOnline:false\n        })\n        .then(()=>{\n            auth()\n        .signOut()\n        .then(()=>{\n            //successfulyy\n            localStorage.clear();\n            dispatch({type:`${authConstant.USER_LOGOUT}_SUCCESS`})\n        })\n        .catch(error =>{\n            console.log(error);\n            dispatch({type:`${authConstant.USER_LOGOUT}_FAILURE`,payload:{error}})\n        })\n\n        })\n        .catch(error=>{\n            console.log(error);\n        })\n\n        \n    }\n}","import React from 'react'\nimport Header from \"../Header\"\n\n/**\n* @author\n* @function Layout\n**/\n\nconst Layout = (props) => {\n  return(\n    <div>\n    <Header/>\n    {props.children}\n    </div>\n   )\n\n }\n\nexport default Layout","import React from 'react';\nimport './style.css';\nimport Layout from \"../../components/Layout\"\nimport {useEffect,useState} from \"react\"\nimport {useDispatch,useSelector} from \"react-redux\"\nimport { getRealtimeUsers,updateMessage,getRealtimeConversations} from \"../../actions\";\n//import {getRealtimeUsers} from \"../../actions\"\nconst User = (props) =>{\n    const {user,onClick} = props;\n    return(\n        <div onClick={()=>onClick(user)}  className=\"displayName\">\n            <div  className=\"displayPic\">\n                <img src=\"https://i.pinimg.com/originals/be/ac/96/beac96b8e13d2198fd4bb1d5ef56cdcf.jpg\" alt=\"\" />\n            </div>\n            <div style={{display:\"flex\",flex:1,justifyContent:\"space-between\", margin: '0 10px'}}>\n                <span style={{fontWeight: 500}}>{user.firstName} {user.lastName}</span>\n                <span className={user.isOnline? `onlineStatus`:`onlineStatus off`}> </span>\n            </div>\n        </div>\n    )\n}\nconst HomePage = (props) => {\n    const dispatch  = useDispatch()\n    const auth = useSelector(state=>state.auth)\n    const user = useSelector(state=>state.user)\n    const [chatStarted,setChatStarted] = useState(false)\n    const [chatUser,setChatUser] = useState(\"\")\n    const [message,setMessage] = useState(\"\")\n    const [userUid,setUserUid] = useState(null)\n    let unsubscribe;\n    useEffect(() => {\n\n     unsubscribe = dispatch(getRealtimeUsers(auth.uid))\n    .then(unsubscribe => {\n      return unsubscribe;\n    })\n    .catch(error => {\n      console.log(error);\n    })\n\n    \n\n\n  }, []);\n\n  //console.log(user);\n\n  //componentWillUnmount\n  useEffect(() => {\n    return () => {\n      //cleanup\n      unsubscribe.then(f => f()).catch(error => console.log(error));\n\n    }\n  }, []);\n\n  const initChat = (user) =>{\n      setChatStarted(true);\n      setChatUser(`${user.firstName}${user.lastName}`)\n      setUserUid(user.uid)\n      dispatch(getRealtimeConversations({uid_1:auth.uid,uid_2:user.uid}))\n      console.log(user);\n\n  }\n  const submitMessage = (e) =>{\n      const msgObj = {\n      user_uid_1: auth.uid,\n      user_uid_2: userUid,\n      message\n    }\n      if(message !==\"\"){\n          dispatch(updateMessage(msgObj))\n          .then(()=>{\n              setMessage(\"\");\n          })\n      }\n      console.log(msgObj);\n  }\n   \n  return (\n    <Layout>\n    <section className=\"container\">\n    <div className=\"listOfUsers\">\n    {\n        user.users.length>0?\n        user.users.map(user=>{\n            return(\n            <User onClick={initChat} key={user.id} user={user}/>\n                )\n        }):null\n    }\n\n        \n    </div>\n    <div className=\"chatArea\">\n   \n        <div className=\"chatHeader\">{chatStarted?chatUser:\"\"} </div>\n        <div className=\"messageSections\">\n        {\n            chatStarted ?\n            user.conversations.map(con=>\n             <div style={{ textAlign:con.user_uid_1===auth.uid?\"right\":\"left\" }}>\n                <p className=\"messageStyle\" >{con.message}</p>\n            </div>)\n            :null\n        }\n\n           \n\n        </div>\n        {\n            chatStarted ?\n            <div className=\"chatControls\">\n            <textarea value={message} onChange={(e)=>setMessage(e.target.value)} placeholder=\"Write Message\"/>\n            <button onClick={submitMessage}>Send</button>\n        </div>:null\n        }\n        \n    </div>\n</section>\n</Layout>\n  );\n}\n\nexport default HomePage;","import { userConstants } from \"./constants\";\nimport { firestore } from \"firebase\";\nexport const getRealtimeUsers = (uid) =>{\n    return async (dispatch) =>{\n        dispatch({type:`${userConstants.GET_REALTIME_USERS}_REQUEST`});\n        const db = firestore()\n       const unsubscribe =  db.collection(\"users\")\n       // .where(\"uid\", \"!=\", uid)\n    .onSnapshot((querySnapshot)=> {\n        const users = [];\n        querySnapshot.forEach(function(doc) {\n            if(doc.data().uid !== uid){\n            users.push(doc.data());\n\n            }\n        });\n       // console.log(users);\n       dispatch({\n           type:`${userConstants.GET_REALTIME_USERS}_SUCCESS`,\n           payload:{users}\n           });\n    });\n    return unsubscribe;\n    }\n}\n\nexport  const updateMessage = (msgObj) =>{\n    return async dispatch=>{\n        const db = firestore()\n        db.collection(\"conversations\")\n        .add({\n            ...msgObj,\n            isView:false,\n            createdAt: new Date(),\n            \n        })\n        .then((data)=>{\n            console.log(data)\n            //SUCCESS\n      //      dispatch({\n        //        type:userConstants.GET_REALTIME_MESSAGES,\n          //  })\n        })\n        .catch(error=>{\n            console.log(error);\n        })\n    }\n}\n\nexport const getRealtimeConversations = (user) =>{\n    return async dispatch =>{\n        const db = firestore();\n        db.collection(\"conversations\")\n        .where(\"user_uid_1\",\"in\",[user.uid_1,user.uid_2])\n        .orderBy(\"createdAt\",\"asc\")\n        .onSnapshot((querySnapshot)=>{\n            const conversations = []\n            querySnapshot.forEach(doc =>{\n                if(\n                    (doc.data().user_uid_1 === user.uid_1 && doc.data().user_uid_2 === user.uid_2)\n                    ||(doc.data().user_uid_1 === user.uid_2 && doc.data().user_uid_2 ===user.uid_1)\n                    ){\n                        conversations.push(doc.data()) \n                }\n              /*  if(conversations>0){\n                    \n                }else{\n                    dispatch({\n                        type:`${userConstants.GET_REALTIME_MESSAGES}_FAILURE`,\n                        payload:{conversations}\n                    })\n                }*/\n\n              \n            })\n            dispatch({\n                        type:userConstants.GET_REALTIME_MESSAGES,\n                        payload:{conversations}\n                    })\n            console.log(conversations);\n        })\n    }\n}","import React from 'react'\nimport \"./style.css\"\n/**\n* @author\n* @function Card\n**/\n\nconst Card = (props) => {\n  return(\n    <div className=\"card\">\n    {props.children}\n    </div>\n   )\n\n }\n\nexport default Card","import React,{useState} from 'react'\nimport Layout from \"../../components/Layout\"\nimport Card from \"../../components/Layout/UI/Card\";\nimport \"./style.css\"\nimport {useDispatch,useSelector} from \"react-redux\"\nimport {signin} from \"../../actions/\"\nimport {Redirect} from \"react-router-dom\"\n/**\n* @author\n* @function LoginPage\n**/\n\nconst LoginPage = (props) => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\")\n  const dispatch = useDispatch();//hook\n  const auth = useSelector(state=> state.auth)\n\n  //useEffect(()=>{\n    //if(!auth.authenticated){\n    //  dispatch({isLoggedInUser})\n    //}\n  //},[])\n  const userLogin = (e) =>{\n    e.preventDefault();\n    if(email === \"\"){\n      alert(\"Email is required\");\n      return;\n    }\n    if(password === \"\"){\n      alert(\"Password is required\")\n      return;\n    }\n    dispatch(signin({email,password}))\n  }\n\n  if(auth.authenticated){\n    return <Redirect to = {\"/\"}/>\n  }\n  return(\n    <Layout>\n      <div className=\"loginContainer\">\n       <Card>\n          <form onSubmit={userLogin}>\n          <input name=\"email\" type=\"text\" value={email} onChange={(e)=>setEmail(e.target.value)} placeholder=\"Email\"/>\n          <input name=\"password\" type=\"password\" value={password} onChange={(e)=>setPassword(e.target.value)} placeholder=\"Password\"/>\n          <div><button>Login</button></div>\n          </form>\n       </Card>\n     </div>\n    </Layout>\n    \n   )\n\n }\n\nexport default LoginPage","import React,{useState} from 'react'\nimport Layout from \"../../components/Layout\"\nimport Card from \"../../components/Layout/UI/Card\"\nimport {signup} from \"../../actions\"\nimport {useDispatch,useSelector} from \"react-redux\"\nimport {Redirect} from \"react-router-dom\"\n\n/**\n* @author\n* @function RegisterPage\n**/\n\nconst RegisterPage = (props) => {\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const dispatch = useDispatch()\n  const auth = useSelector(state =>state.auth)\n  const registerUser = (e) =>{\n    e.preventDefault()\n    const user = {\n      firstName, lastName, email, password\n    }\n    dispatch(signup(user))\n\n  }\n  if(auth.authenticated){\n    return <Redirect to = {\"/\"}/>\n  }\n  return(\n    <Layout>\n       <div className=\"loginContainer\">\n         <Card>\n            <form onSubmit={registerUser}>\n            <h3>Sign Up</h3>\n            <input name=\"firstName\" type=\"text\" value={firstName} onChange={(e)=>setFirstName(e.target.value)} placeholder=\"First Name\"/>\n            <input name=\"lastName\" type=\"text\" value={lastName} onChange={(e)=>setLastName(e.target.value)} placeholder=\"Last Name\"/>\n            <input name=\"email\" type=\"text\" value={email} onChange={(e)=>setEmail(e.target.value)} placeholder=\"Email\"/>\n            <input name=\"password\" type=\"password\" value={password} onChange={(e)=>setPassword(e.target.value)} placeholder=\"Password\"/>\n            <div>\n            <button>SignUp</button>\n            </div>\n\n            </form>\n         </Card>\n       </div>\n    </Layout>\n   )\n\n }\n\nexport default RegisterPage","import React from 'react'\nimport {Route,Redirect} from \"react-router-dom\"\n/**\n* @author\n* @function PrivateRoute\n**/\n\nconst PrivateRoute = ({component:Component,...rest}) => {\n  return(\n      <Route {...rest} component={(props)=>{\n        const user = localStorage.getItem(\"user\") ? JSON.parse(localStorage.getItem(\"user\")):null;\n        if(user){\n          return <Component/>\n        }else{\n          return <Redirect to ={`/login`}/>\n        }\n      }}/>\n   )\n\n }\n\nexport default PrivateRoute","import React from 'react';\nimport {useState,useEffect} from 'react'\n\nimport './App.css';\nimport {BrowserRouter as Router,Route} from \"react-router-dom\"\nimport HomePage from \"./containers/HomePage\"\nimport LoginPage from \"./containers/LoginPage\"\nimport RegisterPage from \"./containers/RegisterPage\"\nimport PrivateRoute from \"./components/PrivateRoute\"\nimport {isLoggedInUser} from \"./actions\"\nimport {useDispatch,useSelector} from \"react-redux\"\n\nfunction App() {\n  const dispatch = useDispatch()\n  const auth = useSelector(state=>state.auth)\n  useEffect(()=>{\n    if(!auth.authenticated){\n      dispatch(isLoggedInUser())\n    }\n  },[])\n  return (\n    <div className=\"App\">\n      <Router>\n      {/* only logged in user can see and access the home route*/}\n         <PrivateRoute path=\"/\" exact component={HomePage}/>\n           {/*anybody can see*/}\n         <Route path = \"/login\" component={LoginPage}/>\n         <Route path=\"/signup\" component={RegisterPage}/>\n      </Router>\n      \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {authConstant} from \"../actions/constants.js\"\nconst initState = {\n    firstName:\"\",\n    lastName:\"\",\n    email:\"\",\n    authenticating:false,\n    authenticated:false,\n    error:null\n}\n\n\nexport default (state=initState,action)=>{\n    console.log(action)\n    switch(action.type){\n        case `${authConstant.USER_LOGIN}_REQUEST`:\n        state = {\n            ...state,\n            authenticating:true\n        }\n         break;\n        case `${authConstant.USER_LOGIN}_SUCCESS`:\n        state = {\n            ...state,\n            ...action.payload.user,\n            authenticated:true,\n            authenticating:false\n        }\n        break;\n        case `${authConstant.USER_LOGIN}_FAILURE`:\n        state={\n            ...state,\n            authenticated:false,\n            authenticating:false,\n            error:action.payload.error\n        }\n\n        break;\n        case `${authConstant.USER_LOGOUT}_REQUEST`:\n        break;\n         case `${authConstant.USER_LOGOUT}_SUCCESS`:\n         state = {\n             ...initState\n         }\n        break;\n        case `${authConstant.USER_LOGOUT}_FAILURE`:\n        state = {\n            ...state,\n            error:action.payload.error\n        }\n        break;\n        default:\n    }\n    return state\n\n}","import {userConstants} from \"../actions/constants\"\nconst initState = {\n    users:[],\n    conversations:[]\n}\n\nexport default (state=initState,action)=>{\n    switch(action.type){\n        case `${userConstants.GET_REALTIME_USERS}_REQUEST`:\n        break;\n        case `${userConstants.GET_REALTIME_USERS}_SUCCESS`:\n        state = {\n            ...state,\n            users:action.payload.users\n        }\n        break; \n        case userConstants.GET_REALTIME_MESSAGES:\n            state = {\n                ...state,\n                conversations:action.payload.conversations\n            }\n            break;\n        default:\n    }\n    return state\n\n}","  \nimport { combineReducers } from \"redux\";\nimport authReducer from './auth.reducer';\n//import userReducer from './user.reducer';\nimport userReducer from \"./user.reducer\";\n\nconst rootReducer = combineReducers({\n    auth: authReducer,\n    user:userReducer,\n    \n});\n\nexport default rootReducer;","import { createStore,applyMiddleware} from \"redux\";\nimport rootReducer from \"../reducers\"\nimport thunk from \"redux-thunk\"\n\nconst store  = createStore(rootReducer,applyMiddleware(thunk));\n\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport firebase from \"firebase\";\nimport {Provider} from \"react-redux\"\nimport store from \"./store\"\n// Your web app's Firebase configuration\n   var firebaseConfig = {\n    apiKey: \"AIzaSyCKGiADixRKT-Cbp4_4tf4VbeYJ5OpRNsg\",\n    authDomain: \"web-messenger-2afac.firebaseapp.com\",\n    databaseURL: \"https://web-messenger-2afac.firebaseio.com\",\n    projectId: \"web-messenger-2afac\",\n    storageBucket: \"web-messenger-2afac.appspot.com\",\n    messagingSenderId: \"1086175253939\",\n    appId: \"1:1086175253939:web:1ecf58028c61cca98e67c6\",\n    measurementId: \"G-MM4X3K9D78\"\n  };\n  firebase.initializeApp(firebaseConfig);\n  window.store = store;\nReactDOM.render(\n  <Provider store={store}>\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}